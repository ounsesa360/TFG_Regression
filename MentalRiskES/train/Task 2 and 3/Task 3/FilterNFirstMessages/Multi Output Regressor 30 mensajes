{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPflo4i3SINW3cFkh/lEk73"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard","widgets":{"application/vnd.jupyter.widget-state+json":{"0c2604ef171145808cfc132c93c79ead":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c94207dcae01465a9011cd603f50a984","IPY_MODEL_75a14ffa3d1d4709b6623d0b5c1fedd1","IPY_MODEL_838c151705a04b54b17d94aa66302e85"],"layout":"IPY_MODEL_2206873b8b2843f8be23a1299d6d16ab"}},"c94207dcae01465a9011cd603f50a984":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2a5ce8aa37e4466b2629eb29e74a3d6","placeholder":"​","style":"IPY_MODEL_54726702dbb8475fa1775164ea518c12","value":"100%"}},"75a14ffa3d1d4709b6623d0b5c1fedd1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_15cd5671a2254703ab7fdd93b562c9cf","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c6a0d31213a54b8ab08cefb2cbf822a9","value":1}},"838c151705a04b54b17d94aa66302e85":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fed97d0bf0284866b59c7ead7812819d","placeholder":"​","style":"IPY_MODEL_8fff84efb53043228bfb9eb01f1139dd","value":" 1/1 [00:00&lt;00:00, 14.95it/s]"}},"2206873b8b2843f8be23a1299d6d16ab":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2a5ce8aa37e4466b2629eb29e74a3d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"54726702dbb8475fa1775164ea518c12":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"15cd5671a2254703ab7fdd93b562c9cf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c6a0d31213a54b8ab08cefb2cbf822a9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fed97d0bf0284866b59c7ead7812819d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8fff84efb53043228bfb9eb01f1139dd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b7980155730d4cc5bbb7563c4aa071dd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_29ac2adc15bf44aca00601dda8ba687d","IPY_MODEL_d5c1068897e54b76b8dc1ba7fd0fd6a7","IPY_MODEL_bee8bb52d5ed4e0b926788b6d8354e20"],"layout":"IPY_MODEL_dceedf6eaf4e49aa89f11712c2966a4e"}},"29ac2adc15bf44aca00601dda8ba687d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9dd74c26e054415d8498401c275a5654","placeholder":"​","style":"IPY_MODEL_ed9e5c16db934ff68c949edead80b7c2","value":"Map: 100%"}},"d5c1068897e54b76b8dc1ba7fd0fd6a7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_bd4722c65ee943bca4cdfc57d15f5562","max":35,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5897875cd9744bf9af37b3d24586e722","value":35}},"bee8bb52d5ed4e0b926788b6d8354e20":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a5004dee77ad4b149ec32f597e4a1a60","placeholder":"​","style":"IPY_MODEL_79797838a65b47c18338caeb2d210c04","value":" 35/35 [00:00&lt;00:00, 250.59 examples/s]"}},"dceedf6eaf4e49aa89f11712c2966a4e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"9dd74c26e054415d8498401c275a5654":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ed9e5c16db934ff68c949edead80b7c2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bd4722c65ee943bca4cdfc57d15f5562":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5897875cd9744bf9af37b3d24586e722":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a5004dee77ad4b149ec32f597e4a1a60":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"79797838a65b47c18338caeb2d210c04":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":43,"metadata":{"id":"_BiM0RepL_H6","executionInfo":{"status":"ok","timestamp":1682181311054,"user_tz":-120,"elapsed":2028,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a9f6ead6-b796-4d3e-e7fb-60d2f1b9de2f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["!pip install datasets transformers"],"metadata":{"id":"wCWqtrBkuBp9","executionInfo":{"status":"ok","timestamp":1682181324354,"user_tz":-120,"elapsed":13301,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6671d015-99bf-4d16-9367-9ee23840c753"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: datasets in /usr/local/lib/python3.9/dist-packages (2.11.0)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.9/dist-packages (4.28.1)\n","Requirement already satisfied: huggingface-hub<1.0.0,>=0.11.0 in /usr/local/lib/python3.9/dist-packages (from datasets) (0.13.4)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.9/dist-packages (from datasets) (0.70.14)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.9/dist-packages (from datasets) (6.0)\n","Requirement already satisfied: dill<0.3.7,>=0.3.0 in /usr/local/lib/python3.9/dist-packages (from datasets) (0.3.6)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.9/dist-packages (from datasets) (1.5.3)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.9/dist-packages (from datasets) (1.22.4)\n","Requirement already satisfied: tqdm>=4.62.1 in /usr/local/lib/python3.9/dist-packages (from datasets) (4.65.0)\n","Requirement already satisfied: fsspec[http]>=2021.11.1 in /usr/local/lib/python3.9/dist-packages (from datasets) (2023.4.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.9/dist-packages (from datasets) (23.1)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.9/dist-packages (from datasets) (2.27.1)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.9/dist-packages (from datasets) (3.8.4)\n","Requirement already satisfied: xxhash in /usr/local/lib/python3.9/dist-packages (from datasets) (3.2.0)\n","Requirement already satisfied: pyarrow>=8.0.0 in /usr/local/lib/python3.9/dist-packages (from datasets) (9.0.0)\n","Requirement already satisfied: responses<0.19 in /usr/local/lib/python3.9/dist-packages (from datasets) (0.18.0)\n","Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /usr/local/lib/python3.9/dist-packages (from transformers) (0.13.3)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.9/dist-packages (from transformers) (2022.10.31)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from transformers) (3.11.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (1.3.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (1.9.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (23.1.0)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (4.0.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (1.3.3)\n","Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.9/dist-packages (from aiohttp->datasets) (2.0.12)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub<1.0.0,>=0.11.0->datasets) (4.5.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests>=2.19.0->datasets) (3.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests>=2.19.0->datasets) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests>=2.19.0->datasets) (2022.12.7)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas->datasets) (2022.7.1)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas->datasets) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.8.1->pandas->datasets) (1.16.0)\n"]}]},{"cell_type":"code","source":["gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Not connected to a GPU')\n","else:\n","  print(gpu_info)"],"metadata":{"id":"13dCqvZhuxs_","executionInfo":{"status":"ok","timestamp":1682181324354,"user_tz":-120,"elapsed":8,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f678ed32-25d4-471b-970c-76435f562779"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["/bin/bash: nvidia-smi: command not found\n"]}]},{"cell_type":"code","source":["import transformers, datasets\n","transformers.logging.set_verbosity_error()\n","datasets.logging.set_verbosity_error()"],"metadata":{"id":"4evkaVy1u46V","executionInfo":{"status":"ok","timestamp":1682181325024,"user_tz":-120,"elapsed":673,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["from datasets import load_dataset\n","\n","data_path = \"/content/drive/My Drive/TFG/MentalRiskES/train/Task 2/\"\n","dataset = load_dataset(\"csv\", data_files=data_path+\"task2_all_subjects_all_text_csv.csv\")\n","dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["0c2604ef171145808cfc132c93c79ead","c94207dcae01465a9011cd603f50a984","75a14ffa3d1d4709b6623d0b5c1fedd1","838c151705a04b54b17d94aa66302e85","2206873b8b2843f8be23a1299d6d16ab","d2a5ce8aa37e4466b2629eb29e74a3d6","54726702dbb8475fa1775164ea518c12","15cd5671a2254703ab7fdd93b562c9cf","c6a0d31213a54b8ab08cefb2cbf822a9","fed97d0bf0284866b59c7ead7812819d","8fff84efb53043228bfb9eb01f1139dd"]},"id":"FMiyJWAHMa4-","executionInfo":{"status":"ok","timestamp":1682181325024,"user_tz":-120,"elapsed":16,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"1d12304d-4fdd-4ab8-8322-cc9545b684b0"},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/1 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0c2604ef171145808cfc132c93c79ead"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 175\n","    })\n","})"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["dataset['train'][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Z_fyU-Eunev","executionInfo":{"status":"ok","timestamp":1682181325025,"user_tz":-120,"elapsed":13,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"f601886a-8529-45da-bf79-1144354f01d1"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Message': \"volvi me extrañaron signo de interrogación. y tu pareja signo de interrogación. todo el credito de aqui es mio cara sonriendo ligeramente. da signo de interrogación. frikifriki cara revolviéndose de la risa. ah wey dedo índice hacia arriba tono de piel medio Billie. good bye mano saludando tono de piel medio. holis cara sonriendo con superioridad. la muerte es algo lindo cara con ceja alzada corazón negro. quiero we cara babeando. es q ya llegue a un limite cara de desaprobación. prefiero estar muerto q seguir en este planeta. y signo de interrogación. tengo 4 de diferentes tamaños. se viene story time cara de sueño. yo dorso de mano con índice a la derecha tono de piel claro medio dorso de mano con índice a la izquierda tono de piel claro medio. quien o q cara con ceja alzada. ella signo de interrogación. es q estoy por borrar todas mis redes sociales. ya tengo micro nuevo cara sonriendo con ojos sonrientes. en un rato contare algo. wee ya para cara sin expresión. de que signo de interrogación. weee cara sonriendo con sudor frío. anoche a las 12 plane suicidarme pero un sms lo cambio todo. tu cres que tengo miedo a morir signo de interrogación. hola a nadie cara sonriente. I'm nobody cara con ceja alzada. yesss ... cara de alivio. pues ni idea y tu. anoche fue una noche larga le conte a un amigo { ni tan amigo } le dije lo q paso y me dio una pastilla para veverlas antes de dormir eso fue a eso de las 11 y me siento como un zombie. fue una pastillas q le resetaron a el hace ya 2 meses el estaba igual q yo pero . asi se siente estar medicado signo de interrogación estar como quien dice cesado para no lastimarse signo de interrogación 🤦🏽\\u200d♂ si q es una m la vida. son las 4 y no puedo pararme siento q me caere. cara preocupada cara preocupada. mejor me quedo asi y ya me duermo si puedo. a ellos no les importo. todos mis problemas y pensamientos raros x q cres que nacieron signo de interrogación x ellos por etiquetarme como el mal hijo . como el que nunca mejora . como el q solo llama a la atencion y culpable de todo pero no entiendo en q fallo yo . { - No me drogo . No tengo amigos . No robo . No tengo ningun vicio y tampoco soy algo deceado cara decepcionada - }. si pero viven en otro estado q yo y no hablamos y es una M cara sonriendo ligeramente. no les dire nada muchos dicen q estaba bromeando sobre lo de anoche pero en mi cuarto a la ama ecer iba a ver una solpresa. digo al amanecer . 🤦🏽\\u200d♂ el teclado de la pc se me resvala. anoche iba a suicidarme cara con ojos en blanco. no lo hice xq llego una llamada de alguien muy especial para mi y le conte todo. tratare de dormir . apenas puedo con la laptop. ok . muchas gracias x todo chispas. val 3 ya vere lo q aga. ok no puedo dormir me siento horrible. hola @USER mano saludando tono de piel medio. hi Adan mano saludando tono de piel medio. flecha hacia arriba flecha hacia arriba flecha hacia arriba flecha hacia arriba. atencion signo de exclamación. holis cara sonriente. canzado cara revolviéndose de la risa. no se amaneci asi x una pastilla rara. yo me la paso durmiendo. we no te drogues. noup cara haciendo una mueca made in china ni china so n cara revolviéndose de la risa. COMO ESTAS signo de interrogación. my billie cara sin expresión. pues es mi fondo de escritorio de ella y tengo descargada todas sus musicas mi favorita ´ ´ lovely ´ ´ y tengo un mundo de todas de sus fts asi q creo q no soy fan. si son muy buena. hola cara de por favor signo de exclamación. buenas noches . bien y tu. calavera calavera calavera. Hambre cara sonriendo ligeramente. thanks cara sonriente. wee no lo agas. noooo pero eso se ve feo en un macho. puede ser xq mi primo finjio ser hetero x 5 años cara revolviéndose de la risa. talvez no es gay a lo mejor bisexual eso es bueno para ti cara sonriendo con sudor frío. y yo y en otra ventana juego among us. de nada we fue todo mi esfuerzo 🦸🏽\\u200d♂. q te pasa tuuuuu. yo see como no estar triste ya q calavera. real comprrobado x mi. holaaaa cara de alivio. depre signo de interrogación. muy bien por el momento y tu. esa el la actitud cara sonriendo con gafas de sol. wow cara sin boca. yo queria comprarme una luz led cara con el ceño fruncido. owww me quitaste las ganas cara revolviéndose de la risa. me voy para españa en yola quien me acepta ilegalmente cara sonriendo con los ojos cerrados cara sonriendo con los ojos cerrados cara sonriendo con los ojos cerrados. weeeee mejor paso cara llorando fuerte cara revolviéndose de la risa. que es eso birra signo de interrogación cara pensativa. yo solo tomo vino y champaña o tequila cara sonriendo con los ojos cerrados. no me gusta la cerveza. Dominican cara sonriendo con gafas de sol 🇩 🇴 chispas. por donde vivo es muy caro pero muy cara sonriendo con los ojos cerrados. vaya ami me gusta todo menos cerveza cara sonriendo con los ojos cerrados cara sonriendo con los ojos cerrados. woow extraño mi vida de 1 año atras. yo hace un año me pase de tequilas con mis primos y hasta bañarme tubieron cara sonriendo con los ojos cerrados cara sonriendo con los ojos cerrados cara sonriendo con los ojos cerrados. senti q la cama me daba vueltas y yo estaba asi .. cara de loco cara revolviéndose de la risa. Adan signo de interrogación. una pregunta 🤦🏽\\u200d♂. ufffffff somos grande cara revolviéndose de la risa calavera. yo desde un principio lo supe. esa muerte conmovio al mun 2. mi hermana lloro mucho con su muerte y yo quede ... cara con ceja alzada. si parece cara revolviéndose de la risa. pues nada ando aburrido no c que hacer cara sonriendo con los ojos cerrados. \",\n"," 'Subject': 'subject101',\n"," 'Label_b': 0.9,\n"," 'Suffer_in_favour': 0.7,\n"," 'Suffer_against': 0.1,\n"," 'Suffer_other': 0.1,\n"," 'Control': 0.1}"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["dataset = dataset[\"train\"].train_test_split(test_size=0.3, seed=42)\n","print(dataset)\n","\n","aux_dataset = dataset[\"test\"].train_test_split(test_size=0.33, seed=42)\n","print(aux_dataset)\n","\n","dataset['validation']=aux_dataset['test']\n","dataset['test']=aux_dataset['train']\n","del(aux_dataset)\n","print(dataset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2IvcYiBJ0JhT","executionInfo":{"status":"ok","timestamp":1682181325025,"user_tz":-120,"elapsed":11,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"3c9e1905-cecf-4037-82fb-ce6d69cff30d"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["DatasetDict({\n","    train: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 122\n","    })\n","    test: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 53\n","    })\n","})\n","DatasetDict({\n","    train: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 35\n","    })\n","    test: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 18\n","    })\n","})\n","DatasetDict({\n","    train: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 122\n","    })\n","    test: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 35\n","    })\n","    validation: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control'],\n","        num_rows: 18\n","    })\n","})\n"]}]},{"cell_type":"code","source":["MODEL_NAME='bert-base-multilingual-uncased'\n","\n","# XLM-T: This is a XLM-Roberta-base model trained on ~198M multilingual tweets\n","# MODEL_NAME= \"cardiffnlp/twitter-xlm-roberta-base\"\n","\n","# XLM-R: XLM-RoBERTa model pre-trained on 2.5TB of filtered CommonCrawl data containing 100 languages.\n","# MODEL_NAME= \"xlm-roberta-base\"\n","\n","# DistillBERT: a distilled version of the BERT base multilingual model. The model is trained on the concatenation of Wikipedia in 104 different languages\n","# The model has 6 layers, 768 dimension and 12 heads, totalizing 134M parameters (compared to 177M parameters for mBERT-base). \n","# On average, this model, referred to as DistilmBERT, is twice as fast as mBERT-base.\n","# MODEL_NAME= \"distilbert-base-multilingual-cased\"\n","\n","# MiniLM:Multilingual MiniLM uses the same tokenizer as XLM-R\n","# MODEL_NAME= \"microsoft/Multilingual-MiniLM-L12-H384\"\n","\n","print('Using model:', MODEL_NAME)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-MuWGUZOvBJu","executionInfo":{"status":"ok","timestamp":1682181325025,"user_tz":-120,"elapsed":8,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"650d4868-90d0-48f0-e4f2-5fd2577b70d3"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Using model: bert-base-multilingual-uncased\n"]}]},{"cell_type":"code","source":["from transformers import AutoTokenizer\n","\n","if 'MiniLM' in MODEL_NAME:\n","    # we must load the tokenizer of XLM-R\n","    tokenizer = AutoTokenizer.from_pretrained(\"xlm-roberta-base\")\n","else: \n","    tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)\n"],"metadata":{"id":"ljpBXXWTvF6b","executionInfo":{"status":"ok","timestamp":1682181325268,"user_tz":-120,"elapsed":250,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["len_train_texts = [len(tokenizer(text).input_ids) for text in dataset['train']['Message']]\n","\n","import pandas as pd\n","df=pd.Series(len_train_texts)\n","df.describe(percentiles=[0.25, 0.50, 0.75, 0.85, 0.90, 0.95, 0.99])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fo_-iSvrvIfk","executionInfo":{"status":"ok","timestamp":1682181325587,"user_tz":-120,"elapsed":320,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"c52bfd01-b10b-4817-92d8-d786d6d694fa"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     122.000000\n","mean      690.836066\n","std       672.822393\n","min       106.000000\n","25%       257.750000\n","50%       454.000000\n","75%       863.750000\n","85%      1255.700000\n","90%      1517.500000\n","95%      1888.650000\n","99%      2603.310000\n","max      4974.000000\n","dtype: float64"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["EJECUTAR HASTA AQUÍ PARA VER LA LEN"],"metadata":{"id":"lOL198jgvERj"}},{"cell_type":"code","source":["MAX_LEN = 512\n","\n","def tokenize(examples):\n","    ## it applies the tokenizer on the dataset in its field text\n","    # we could add max_length = MAX_LENGHT, but in this case is not neccesary because MAX_LENGTH is already 512, the maximum length allowed by the model\n","    return tokenizer(examples[\"Message\"], truncation=True, max_length=MAX_LEN, padding='max_length')\n","\n","\n","data_encodings=dataset.map(tokenize, batched=True)\n","data_encodings\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273,"referenced_widgets":["b7980155730d4cc5bbb7563c4aa071dd","29ac2adc15bf44aca00601dda8ba687d","d5c1068897e54b76b8dc1ba7fd0fd6a7","bee8bb52d5ed4e0b926788b6d8354e20","dceedf6eaf4e49aa89f11712c2966a4e","9dd74c26e054415d8498401c275a5654","ed9e5c16db934ff68c949edead80b7c2","bd4722c65ee943bca4cdfc57d15f5562","5897875cd9744bf9af37b3d24586e722","a5004dee77ad4b149ec32f597e4a1a60","79797838a65b47c18338caeb2d210c04"]},"id":"MkV_0THcvUVE","executionInfo":{"status":"ok","timestamp":1682181325956,"user_tz":-120,"elapsed":375,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"610e3fbd-9438-4b12-968e-f90b45d474c9"},"execution_count":53,"outputs":[{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/35 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b7980155730d4cc5bbb7563c4aa071dd"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 122\n","    })\n","    test: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 35\n","    })\n","    validation: Dataset({\n","        features: ['Message', 'Subject', 'Label_b', 'Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 18\n","    })\n","})"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["data_encodings = data_encodings.remove_columns(['Message','Subject','Label_b'])\n","data_encodings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_A3LcmxMwgo4","executionInfo":{"status":"ok","timestamp":1682181325957,"user_tz":-120,"elapsed":6,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"4e57e2a9-81d5-432b-be21-ae77f81c1eb8"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 122\n","    })\n","    test: Dataset({\n","        features: ['Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 35\n","    })\n","    validation: Dataset({\n","        features: ['Suffer_in_favour', 'Suffer_against', 'Suffer_other', 'Control', 'input_ids', 'token_type_ids', 'attention_mask'],\n","        num_rows: 18\n","    })\n","})"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["X_train = []\n","y_train = []\n","X_test = []\n","y_test = []\n","for data in data_encodings['train']:\n","  X_train.append(data['input_ids'])\n","  y_train.append([float(data['Suffer_in_favour']),float(data['Suffer_against']),float(data['Suffer_other']),float(data['Control'])])\n","for data in data_encodings['test']:\n","  X_test.append(data['input_ids'])\n","  y_test.append([float(data['Suffer_in_favour']),float(data['Suffer_against']),float(data['Suffer_other']),float(data['Control'])])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8nD_uBHTqBl1","executionInfo":{"status":"ok","timestamp":1682181325957,"user_tz":-120,"elapsed":5,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"7fe358f7-ee09-4178-985b-8c7b051c38f6"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.1, 0.5, 0.4, 0.0],\n"," [0.2, 0.8, 0.0, 0.0],\n"," [0.0, 0.0, 0.0, 1.0],\n"," [0.0, 0.0, 0.0, 1.0],\n"," [0.7, 0.3, 0.0, 0.0],\n"," [0.1, 0.0, 0.2, 0.7],\n"," [0.0, 0.0, 0.0, 1.0],\n"," [0.6, 0.2, 0.0, 0.2],\n"," [0.4, 0.1, 0.0, 0.5],\n"," [0.5, 0.2, 0.1, 0.2],\n"," [0.0, 0.2, 0.2, 0.6],\n"," [0.2, 0.8, 0.0, 0.0],\n"," [0.8, 0.0, 0.1, 0.1],\n"," [0.0, 0.0, 0.0, 1.0],\n"," [0.0, 0.4, 0.0, 0.6],\n"," [0.2, 0.7, 0.0, 0.1],\n"," [0.7, 0.0, 0.3, 0.0],\n"," [0.2, 0.0, 0.1, 0.7],\n"," [0.5, 0.5, 0.0, 0.0],\n"," [0.2, 0.4, 0.1, 0.3],\n"," [0.1, 0.0, 0.0, 0.9],\n"," [0.0, 0.2, 0.0, 0.8],\n"," [0.3, 0.3, 0.4, 0.0],\n"," [0.5, 0.1, 0.1, 0.3],\n"," [0.0, 0.1, 0.0, 0.9],\n"," [0.8, 0.2, 0.0, 0.0],\n"," [0.0, 0.0, 0.1, 0.9],\n"," [0.5, 0.3, 0.0, 0.2],\n"," [0.1, 0.2, 0.0, 0.7],\n"," [0.1, 0.3, 0.0, 0.6],\n"," [1.0, 0.0, 0.0, 0.0],\n"," [0.8, 0.1, 0.1, 0.0],\n"," [0.2, 0.4, 0.1, 0.3],\n"," [0.0, 0.4, 0.0, 0.6],\n"," [0.2, 0.6, 0.0, 0.2]]"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.multioutput import MultiOutputRegressor\n","from sklearn.linear_model import Ridge\n","regr = MultiOutputRegressor(Ridge(random_state=123)).fit(X_train, y_train)\n","class_pred1 = []\n","class_pred2 = []\n","class_pred3 = []\n","class_pred4 = []\n","class1 = []\n","class2 = []\n","class3 = []\n","class4 = []\n","for i in range(len(X_test)):\n","  x = regr.predict([X_test[i]])\n","  class_pred1.append(x[0][0])\n","  class_pred2.append(x[0][1])\n","  class_pred3.append(x[0][2])\n","  class_pred4.append(x[0][3])\n","  class1.append(y_test[i][0])\n","  class2.append(y_test[i][1])\n","  class3.append(y_test[i][2])\n","  class4.append(y_test[i][3])"],"metadata":{"id":"1Hv-2M2IouNV","executionInfo":{"status":"ok","timestamp":1682181326362,"user_tz":-120,"elapsed":407,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error, r2_score, mean_squared_error, mean_absolute_error\n","from scipy import stats\n","# from sklearn.metrics import explained_variance_score\n","\n","def print_metrics(y_test, y_pred, lang=''):\n","    # print(\"Final results on the whole test dataset\")\n","    print('|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|')\n","    print('|---|---|---|---|---|---|---|')\n","\n","    mse = mean_squared_error(y_test, y_pred)\n","    # print (\"MSE: \", \"{:.2f}\".format(mse), end=', ')\n","\n","    rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n","    # print(\"RMSE: \", \"{:.2f}\".format(rmse), end=', ')\n","    \n","    mae = mean_absolute_error(y_test, y_pred)\n","    # print(\"MAE: \", \"{:.2f}\".format(mae), end=', ')\n","\n","    r2 = r2_score(y_test, y_pred)\n","    # print(\"R2: \", \"{:.2f}\".format(r2), end=', ')\n","\n","    diff=[label-pred for (label,pred) in zip(y_test,y_pred)]\n","    smape= 1/len(y_test) * np.sum(2 * np.abs(diff) / (np.abs(y_test) + np.abs(y_pred))*100)\n","    # print(\"SMAPE: \", \"{:.2f}\".format(smape), end=', ')\n","\n","    pearson=stats.pearsonr(y_test, y_pred)[0]\n","    # print(\"PEARSON: \", \"{:.2f}\".format(pearson))\n","    # print()\n","\n","    text_table=str('|')+lang+str('|') +\"{:.2f}\".format(mse) \\\n","                +str('|')+\"{:.2f}\".format(rmse) \\\n","                +str('|')+\"{:.2f}\".format(mae) \\\n","                +str('|')+\"{:.2f}\".format(r2) \\\n","                +str('|')+\"{:.2f}\".format(smape) \\\n","                +str('|')+\"{:.2f}\".format(pearson) + str('|')\n","\n","    print(text_table)\n","    # print()\n"],"metadata":{"id":"IvIJHljJx7Qh","executionInfo":{"status":"ok","timestamp":1682181326363,"user_tz":-120,"elapsed":9,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["print_metrics(class1,class_pred1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LoMnwDUix743","executionInfo":{"status":"ok","timestamp":1682181326363,"user_tz":-120,"elapsed":8,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"411eb96f-8e26-4c86-a220-cc8e53b50e34"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.11|0.34|0.29|-0.32|127.68|0.13|\n"]}]},{"cell_type":"code","source":["print_metrics(class2,class_pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GPFGJ8e5ypxK","executionInfo":{"status":"ok","timestamp":1682181326363,"user_tz":-120,"elapsed":7,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"d548611e-571d-43dd-a658-115c896f4631"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.07|0.27|0.21|-0.33|110.08|0.10|\n"]}]},{"cell_type":"code","source":["print_metrics(class3,class_pred3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T5pLR0R-yp5p","executionInfo":{"status":"ok","timestamp":1682181326363,"user_tz":-120,"elapsed":6,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"7cf9fa23-1045-43da-f3ec-caf110acf95e"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.02|0.13|0.10|-0.34|169.16|0.10|\n"]}]},{"cell_type":"code","source":["print_metrics(class4,class_pred4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o34KpIfQyp_S","executionInfo":{"status":"ok","timestamp":1682181326364,"user_tz":-120,"elapsed":6,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"b346852d-9d98-4bad-87d6-2f4c06635e5b"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.20|0.45|0.35|-0.50|113.28|0.13|\n"]}]},{"cell_type":"code","source":["X_val = []\n","y_val = []\n","for data in data_encodings['validation']:\n","  X_val.append(data['input_ids'])\n","  y_val.append([float(data['Suffer_in_favour']),float(data['Suffer_against']),float(data['Suffer_other']),float(data['Control'])])"],"metadata":{"id":"CoR6_s323yV3","executionInfo":{"status":"ok","timestamp":1682182263526,"user_tz":-120,"elapsed":4,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["for i in range(len(X_val)):\n","  x = regr.predict([X_val[i]])\n","  class_pred1.append(x[0][0])\n","  class_pred2.append(x[0][1])\n","  class_pred3.append(x[0][2])\n","  class_pred4.append(x[0][3])\n","  class1.append(y_val[i][0])\n","  class2.append(y_val[i][1])\n","  class3.append(y_val[i][2])\n","  class4.append(y_val[i][3])"],"metadata":{"id":"tLIHkqQ74Af4","executionInfo":{"status":"ok","timestamp":1682182277888,"user_tz":-120,"elapsed":330,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["print_metrics(class1,class_pred1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682182278223,"user_tz":-120,"elapsed":10,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"750ea9b9-dd9b-468c-efdc-72065839d5d1","id":"Fn6wfCEB4Hjv"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.10|0.32|0.29|-0.41|130.28|0.10|\n"]}]},{"cell_type":"code","source":["print_metrics(class2,class_pred2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682182278223,"user_tz":-120,"elapsed":9,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"1aae7164-dcf6-4bc6-8eef-351cfd255773","id":"FdMzPJg84Hjv"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.05|0.23|0.18|-0.36|98.36|0.13|\n"]}]},{"cell_type":"code","source":["print_metrics(class3,class_pred3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682182278223,"user_tz":-120,"elapsed":7,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"60d1700d-8bd9-48b9-e9c3-163fab77828c","id":"t8enBbC54Hjv"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.01|0.11|0.09|-0.21|168.22|0.14|\n"]}]},{"cell_type":"code","source":["print_metrics(class4,class_pred4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1682182278224,"user_tz":-120,"elapsed":5,"user":{"displayName":"CARLOS RODRIGUEZ CALZADA","userId":"12667430431079591890"}},"outputId":"50af369a-33fd-4127-947e-53870f859048","id":"CQ4Mr_TO4Hjv"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["|   |MSE|RMSE|MAE|R2|SMAPE|PEARSON|\n","|---|---|---|---|---|---|---|\n","||0.20|0.44|0.35|-0.52|99.50|0.11|\n"]}]}]}